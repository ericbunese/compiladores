Terminals which are not used

   ELSE
   IGUAL
   MENOR
   MENOR_IGUAL
   MAIOR
   MAIOR_IGUAL
   DIF


Rules never reduced

   32 @9: /* empty */


State 14 conflicts: 1 reduce/reduce
State 16 conflicts: 5 reduce/reduce
State 23 conflicts: 1 reduce/reduce
State 32 conflicts: 1 reduce/reduce
State 48 conflicts: 1 reduce/reduce


Grammar

    0 $accept: programa $end

    1 @1: /* empty */

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    3 @2: /* empty */

    4 @3: /* empty */

    5 bloco: @2 parte_declara_vars @3 comando_composto

    6 parte_declara_vars: var
    7                   | parte_declara_vars var

    8 @4: /* empty */

    9 var: @4 VAR declara_vars
   10    | /* empty */

   11 declara_vars: declara_vars declara_var
   12             | declara_var

   13 @5: /* empty */

   14 @6: /* empty */

   15 declara_var: @5 lista_id_var DOIS_PONTOS IDENT @6 PONTO_E_VIRGULA

   16 lista_id_var: lista_id_var VIRGULA IDENT
   17             | IDENT

   18 lista_idents: lista_idents VIRGULA IDENT
   19             | IDENT

   20 comando_composto: T_BEGIN comandos T_END
   21                 | comando

   22 comandos: comando
   23         | comandos comando

   24 comando: comando_sem_rotulo
   25        | IDENT DOIS_PONTOS comando_sem_rotulo

   26 comando_sem_rotulo: regra_atribuicao
   27                   | regra_condicional
   28                   | regra_while

   29 @7: /* empty */

   30 @8: /* empty */

   31 regra_atribuicao: IDENT @7 ATRIBUICAO IDENT @8 PONTO_E_VIRGULA

   32 @9: /* empty */

   33 @10: /* empty */

   34 regra_atribuicao: IDENT @9 ATRIBUICAO NUMERO @10 PONTO_E_VIRGULA

   35 regra_condicional: IF expressao THEN comando_composto

   36 @11: /* empty */

   37 regra_while: WHILE @11 expressao DO comando_composto

   38 expressao: compara

   39 compara: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2
ABRE_PARENTESES (259) 2
FECHA_PARENTESES (260) 2
VIRGULA (261) 16 18
PONTO_E_VIRGULA (262) 2 15 31 34
DOIS_PONTOS (263) 15 25
PONTO (264) 2
T_BEGIN (265) 20
T_END (266) 20
VAR (267) 9
IDENT (268) 2 15 16 17 18 19 25 31 34
NUMERO (269) 34
ATRIBUICAO (270) 31 34
WHILE (271) 37
DO (272) 37
IF (273) 35
THEN (274) 35
ELSE (275)
IGUAL (276)
MENOR (277)
MENOR_IGUAL (278)
MAIOR (279)
MAIOR_IGUAL (280)
DIF (281)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
programa (28)
    on left: 2, on right: 0
@1 (29)
    on left: 1, on right: 2
bloco (30)
    on left: 5, on right: 2
@2 (31)
    on left: 3, on right: 5
@3 (32)
    on left: 4, on right: 5
parte_declara_vars (33)
    on left: 6 7, on right: 5 7
var (34)
    on left: 9 10, on right: 6 7
@4 (35)
    on left: 8, on right: 9
declara_vars (36)
    on left: 11 12, on right: 9 11
declara_var (37)
    on left: 15, on right: 11 12
@5 (38)
    on left: 13, on right: 15
@6 (39)
    on left: 14, on right: 15
lista_id_var (40)
    on left: 16 17, on right: 15 16
lista_idents (41)
    on left: 18 19, on right: 2 18
comando_composto (42)
    on left: 20 21, on right: 5 35 37
comandos (43)
    on left: 22 23, on right: 20 23
comando (44)
    on left: 24 25, on right: 21 22 23
comando_sem_rotulo (45)
    on left: 26 27 28, on right: 24 25
regra_atribuicao (46)
    on left: 31 34, on right: 26
@7 (47)
    on left: 29, on right: 31
@8 (48)
    on left: 30, on right: 31
@9 (49)
    on left: 32, on right: 34
@10 (50)
    on left: 33, on right: 34
regra_condicional (51)
    on left: 35, on right: 27
regra_while (52)
    on left: 37, on right: 28
@11 (53)
    on left: 36, on right: 37
expressao (54)
    on left: 38, on right: 35 37
compara (55)
    on left: 39, on right: 38


state 0

    0 $accept: . programa $end

    $default  reduce using rule 1 (@1)

    programa  go to state 1
    @1        go to state 2


state 1

    0 $accept: programa . $end

    $end  shift, and go to state 3


state 2

    2 programa: @1 . PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    PROGRAM  shift, and go to state 4


state 3

    0 $accept: programa $end .

    $default  accept


state 4

    2 programa: @1 PROGRAM . IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 5


state 5

    2 programa: @1 PROGRAM IDENT . ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    ABRE_PARENTESES  shift, and go to state 6


state 6

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES . lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 7

    lista_idents  go to state 8


state 7

   19 lista_idents: IDENT .

    $default  reduce using rule 19 (lista_idents)


state 8

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents . FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO
   18 lista_idents: lista_idents . VIRGULA IDENT

    FECHA_PARENTESES  shift, and go to state 9
    VIRGULA           shift, and go to state 10


state 9

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES . PONTO_E_VIRGULA bloco PONTO

    PONTO_E_VIRGULA  shift, and go to state 11


state 10

   18 lista_idents: lista_idents VIRGULA . IDENT

    IDENT  shift, and go to state 12


state 11

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA . bloco PONTO

    $default  reduce using rule 3 (@2)

    bloco  go to state 13
    @2     go to state 14


state 12

   18 lista_idents: lista_idents VIRGULA IDENT .

    $default  reduce using rule 18 (lista_idents)


state 13

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco . PONTO

    PONTO  shift, and go to state 15


state 14

    5 bloco: @2 . parte_declara_vars @3 comando_composto

    VAR       reduce using rule 8 (@4)
    VAR       [reduce using rule 10 (var)]
    $default  reduce using rule 10 (var)

    parte_declara_vars  go to state 16
    var                 go to state 17
    @4                  go to state 18


state 15

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO .

    $default  reduce using rule 2 (programa)


state 16

    5 bloco: @2 parte_declara_vars . @3 comando_composto
    7 parte_declara_vars: parte_declara_vars . var

    T_BEGIN   reduce using rule 4 (@3)
    T_BEGIN   [reduce using rule 10 (var)]
    VAR       reduce using rule 8 (@4)
    VAR       [reduce using rule 10 (var)]
    IDENT     reduce using rule 4 (@3)
    IDENT     [reduce using rule 10 (var)]
    WHILE     reduce using rule 4 (@3)
    WHILE     [reduce using rule 10 (var)]
    IF        reduce using rule 4 (@3)
    IF        [reduce using rule 10 (var)]
    $default  reduce using rule 4 (@3)

    @3   go to state 19
    var  go to state 20
    @4   go to state 18


state 17

    6 parte_declara_vars: var .

    $default  reduce using rule 6 (parte_declara_vars)


state 18

    9 var: @4 . VAR declara_vars

    VAR  shift, and go to state 21


state 19

    5 bloco: @2 parte_declara_vars @3 . comando_composto

    T_BEGIN  shift, and go to state 22
    IDENT    shift, and go to state 23
    WHILE    shift, and go to state 24
    IF       shift, and go to state 25

    comando_composto    go to state 26
    comando             go to state 27
    comando_sem_rotulo  go to state 28
    regra_atribuicao    go to state 29
    regra_condicional   go to state 30
    regra_while         go to state 31


state 20

    7 parte_declara_vars: parte_declara_vars var .

    $default  reduce using rule 7 (parte_declara_vars)


state 21

    9 var: @4 VAR . declara_vars

    $default  reduce using rule 13 (@5)

    declara_vars  go to state 32
    declara_var   go to state 33
    @5            go to state 34


state 22

   20 comando_composto: T_BEGIN . comandos T_END

    IDENT  shift, and go to state 23
    WHILE  shift, and go to state 24
    IF     shift, and go to state 25

    comandos            go to state 35
    comando             go to state 36
    comando_sem_rotulo  go to state 28
    regra_atribuicao    go to state 29
    regra_condicional   go to state 30
    regra_while         go to state 31


state 23

   25 comando: IDENT . DOIS_PONTOS comando_sem_rotulo
   31 regra_atribuicao: IDENT . @7 ATRIBUICAO IDENT @8 PONTO_E_VIRGULA
   34                 | IDENT . @9 ATRIBUICAO NUMERO @10 PONTO_E_VIRGULA

    DOIS_PONTOS  shift, and go to state 37

    ATRIBUICAO  reduce using rule 29 (@7)
    ATRIBUICAO  [reduce using rule 32 (@9)]
    $default    reduce using rule 29 (@7)

    @7  go to state 38
    @9  go to state 39


state 24

   37 regra_while: WHILE . @11 expressao DO comando_composto

    $default  reduce using rule 36 (@11)

    @11  go to state 40


state 25

   35 regra_condicional: IF . expressao THEN comando_composto

    $default  reduce using rule 39 (compara)

    expressao  go to state 41
    compara    go to state 42


state 26

    5 bloco: @2 parte_declara_vars @3 comando_composto .

    $default  reduce using rule 5 (bloco)


state 27

   21 comando_composto: comando .

    $default  reduce using rule 21 (comando_composto)


state 28

   24 comando: comando_sem_rotulo .

    $default  reduce using rule 24 (comando)


state 29

   26 comando_sem_rotulo: regra_atribuicao .

    $default  reduce using rule 26 (comando_sem_rotulo)


state 30

   27 comando_sem_rotulo: regra_condicional .

    $default  reduce using rule 27 (comando_sem_rotulo)


state 31

   28 comando_sem_rotulo: regra_while .

    $default  reduce using rule 28 (comando_sem_rotulo)


state 32

    9 var: @4 VAR declara_vars .
   11 declara_vars: declara_vars . declara_var

    IDENT     reduce using rule 9 (var)
    IDENT     [reduce using rule 13 (@5)]
    $default  reduce using rule 9 (var)

    declara_var  go to state 43
    @5           go to state 34


state 33

   12 declara_vars: declara_var .

    $default  reduce using rule 12 (declara_vars)


state 34

   15 declara_var: @5 . lista_id_var DOIS_PONTOS IDENT @6 PONTO_E_VIRGULA

    IDENT  shift, and go to state 44

    lista_id_var  go to state 45


state 35

   20 comando_composto: T_BEGIN comandos . T_END
   23 comandos: comandos . comando

    T_END  shift, and go to state 46
    IDENT  shift, and go to state 23
    WHILE  shift, and go to state 24
    IF     shift, and go to state 25

    comando             go to state 47
    comando_sem_rotulo  go to state 28
    regra_atribuicao    go to state 29
    regra_condicional   go to state 30
    regra_while         go to state 31


state 36

   22 comandos: comando .

    $default  reduce using rule 22 (comandos)


state 37

   25 comando: IDENT DOIS_PONTOS . comando_sem_rotulo

    IDENT  shift, and go to state 48
    WHILE  shift, and go to state 24
    IF     shift, and go to state 25

    comando_sem_rotulo  go to state 49
    regra_atribuicao    go to state 29
    regra_condicional   go to state 30
    regra_while         go to state 31


state 38

   31 regra_atribuicao: IDENT @7 . ATRIBUICAO IDENT @8 PONTO_E_VIRGULA

    ATRIBUICAO  shift, and go to state 50


state 39

   34 regra_atribuicao: IDENT @9 . ATRIBUICAO NUMERO @10 PONTO_E_VIRGULA

    ATRIBUICAO  shift, and go to state 51


state 40

   37 regra_while: WHILE @11 . expressao DO comando_composto

    $default  reduce using rule 39 (compara)

    expressao  go to state 52
    compara    go to state 42


state 41

   35 regra_condicional: IF expressao . THEN comando_composto

    THEN  shift, and go to state 53


state 42

   38 expressao: compara .

    $default  reduce using rule 38 (expressao)


state 43

   11 declara_vars: declara_vars declara_var .

    $default  reduce using rule 11 (declara_vars)


state 44

   17 lista_id_var: IDENT .

    $default  reduce using rule 17 (lista_id_var)


state 45

   15 declara_var: @5 lista_id_var . DOIS_PONTOS IDENT @6 PONTO_E_VIRGULA
   16 lista_id_var: lista_id_var . VIRGULA IDENT

    VIRGULA      shift, and go to state 54
    DOIS_PONTOS  shift, and go to state 55


state 46

   20 comando_composto: T_BEGIN comandos T_END .

    $default  reduce using rule 20 (comando_composto)


state 47

   23 comandos: comandos comando .

    $default  reduce using rule 23 (comandos)


state 48

   31 regra_atribuicao: IDENT . @7 ATRIBUICAO IDENT @8 PONTO_E_VIRGULA
   34                 | IDENT . @9 ATRIBUICAO NUMERO @10 PONTO_E_VIRGULA

    ATRIBUICAO  reduce using rule 29 (@7)
    ATRIBUICAO  [reduce using rule 32 (@9)]
    $default    reduce using rule 29 (@7)

    @7  go to state 38
    @9  go to state 39


state 49

   25 comando: IDENT DOIS_PONTOS comando_sem_rotulo .

    $default  reduce using rule 25 (comando)


state 50

   31 regra_atribuicao: IDENT @7 ATRIBUICAO . IDENT @8 PONTO_E_VIRGULA

    IDENT  shift, and go to state 56


state 51

   34 regra_atribuicao: IDENT @9 ATRIBUICAO . NUMERO @10 PONTO_E_VIRGULA

    NUMERO  shift, and go to state 57


state 52

   37 regra_while: WHILE @11 expressao . DO comando_composto

    DO  shift, and go to state 58


state 53

   35 regra_condicional: IF expressao THEN . comando_composto

    T_BEGIN  shift, and go to state 22
    IDENT    shift, and go to state 23
    WHILE    shift, and go to state 24
    IF       shift, and go to state 25

    comando_composto    go to state 59
    comando             go to state 27
    comando_sem_rotulo  go to state 28
    regra_atribuicao    go to state 29
    regra_condicional   go to state 30
    regra_while         go to state 31


state 54

   16 lista_id_var: lista_id_var VIRGULA . IDENT

    IDENT  shift, and go to state 60


state 55

   15 declara_var: @5 lista_id_var DOIS_PONTOS . IDENT @6 PONTO_E_VIRGULA

    IDENT  shift, and go to state 61


state 56

   31 regra_atribuicao: IDENT @7 ATRIBUICAO IDENT . @8 PONTO_E_VIRGULA

    $default  reduce using rule 30 (@8)

    @8  go to state 62


state 57

   34 regra_atribuicao: IDENT @9 ATRIBUICAO NUMERO . @10 PONTO_E_VIRGULA

    $default  reduce using rule 33 (@10)

    @10  go to state 63


state 58

   37 regra_while: WHILE @11 expressao DO . comando_composto

    T_BEGIN  shift, and go to state 22
    IDENT    shift, and go to state 23
    WHILE    shift, and go to state 24
    IF       shift, and go to state 25

    comando_composto    go to state 64
    comando             go to state 27
    comando_sem_rotulo  go to state 28
    regra_atribuicao    go to state 29
    regra_condicional   go to state 30
    regra_while         go to state 31


state 59

   35 regra_condicional: IF expressao THEN comando_composto .

    $default  reduce using rule 35 (regra_condicional)


state 60

   16 lista_id_var: lista_id_var VIRGULA IDENT .

    $default  reduce using rule 16 (lista_id_var)


state 61

   15 declara_var: @5 lista_id_var DOIS_PONTOS IDENT . @6 PONTO_E_VIRGULA

    $default  reduce using rule 14 (@6)

    @6  go to state 65


state 62

   31 regra_atribuicao: IDENT @7 ATRIBUICAO IDENT @8 . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 66


state 63

   34 regra_atribuicao: IDENT @9 ATRIBUICAO NUMERO @10 . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 67


state 64

   37 regra_while: WHILE @11 expressao DO comando_composto .

    $default  reduce using rule 37 (regra_while)


state 65

   15 declara_var: @5 lista_id_var DOIS_PONTOS IDENT @6 . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 68


state 66

   31 regra_atribuicao: IDENT @7 ATRIBUICAO IDENT @8 PONTO_E_VIRGULA .

    $default  reduce using rule 31 (regra_atribuicao)


state 67

   34 regra_atribuicao: IDENT @9 ATRIBUICAO NUMERO @10 PONTO_E_VIRGULA .

    $default  reduce using rule 34 (regra_atribuicao)


state 68

   15 declara_var: @5 lista_id_var DOIS_PONTOS IDENT @6 PONTO_E_VIRGULA .

    $default  reduce using rule 15 (declara_var)
