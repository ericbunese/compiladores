Terminals which are not used

   ELSE


State 11 conflicts: 1 reduce/reduce
State 14 conflicts: 2 reduce/reduce
State 21 conflicts: 3 shift/reduce
State 29 conflicts: 4 shift/reduce
State 35 conflicts: 3 shift/reduce
State 48 conflicts: 3 shift/reduce
State 49 conflicts: 3 shift/reduce


Grammar

    0 $accept: programa $end

    1 @1: /* empty */

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    3 @2: /* empty */

    4 bloco: parte_declara_vars @2 comando_composto

    5 parte_declara_vars: var
    6                   | parte_declara_vars var

    7 @3: /* empty */

    8 var: @3 VAR declara_vars
    9    | /* empty */

   10 declara_vars: declara_vars declara_var
   11             | declara_var

   12 @4: /* empty */

   13 @5: /* empty */

   14 declara_var: @4 lista_id_var DOIS_PONTOS tipo @5 PONTO_E_VIRGULA

   15 tipo: IDENT

   16 lista_id_var: lista_id_var VIRGULA IDENT
   17             | IDENT

   18 lista_idents: lista_idents VIRGULA IDENT
   19             | IDENT

   20 comando_composto: T_BEGIN comandos T_END

   21 comandos: comando
   22         | comandos comando

   23 comando: comando_sem_rotulo
   24        | IDENT DOIS_PONTOS comando_sem_rotulo

   25 comando_sem_rotulo: IDENT ATRIBUICAO IDENT PONTO_E_VIRGULA
   26                   | IF expressao THEN comando_sem_rotulo
   27                   | WHILE expressao DO comando_sem_rotulo
   28                   | /* empty */

   29 expressao: IDENT IGUAL IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2
ABRE_PARENTESES (259) 2
FECHA_PARENTESES (260) 2
VIRGULA (261) 16 18
PONTO_E_VIRGULA (262) 2 14 25
DOIS_PONTOS (263) 14 24
PONTO (264) 2
T_BEGIN (265) 20
T_END (266) 20
VAR (267) 8
IDENT (268) 2 15 16 17 18 19 24 25 29
ATRIBUICAO (269) 25
WHILE (270) 27
DO (271) 27
IF (272) 26
THEN (273) 26
ELSE (274)
IGUAL (275) 29


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
programa (22)
    on left: 2, on right: 0
@1 (23)
    on left: 1, on right: 2
bloco (24)
    on left: 4, on right: 2
@2 (25)
    on left: 3, on right: 4
parte_declara_vars (26)
    on left: 5 6, on right: 4 6
var (27)
    on left: 8 9, on right: 5 6
@3 (28)
    on left: 7, on right: 8
declara_vars (29)
    on left: 10 11, on right: 8 10
declara_var (30)
    on left: 14, on right: 10 11
@4 (31)
    on left: 12, on right: 14
@5 (32)
    on left: 13, on right: 14
tipo (33)
    on left: 15, on right: 14
lista_id_var (34)
    on left: 16 17, on right: 14 16
lista_idents (35)
    on left: 18 19, on right: 2 18
comando_composto (36)
    on left: 20, on right: 4
comandos (37)
    on left: 21 22, on right: 20 22
comando (38)
    on left: 23 24, on right: 21 22
comando_sem_rotulo (39)
    on left: 25 26 27 28, on right: 23 24 26 27
expressao (40)
    on left: 29, on right: 26 27


state 0

    0 $accept: . programa $end

    $default  reduce using rule 1 (@1)

    programa  go to state 1
    @1        go to state 2


state 1

    0 $accept: programa . $end

    $end  shift, and go to state 3


state 2

    2 programa: @1 . PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    PROGRAM  shift, and go to state 4


state 3

    0 $accept: programa $end .

    $default  accept


state 4

    2 programa: @1 PROGRAM . IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 5


state 5

    2 programa: @1 PROGRAM IDENT . ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    ABRE_PARENTESES  shift, and go to state 6


state 6

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES . lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 7

    lista_idents  go to state 8


state 7

   19 lista_idents: IDENT .

    $default  reduce using rule 19 (lista_idents)


state 8

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents . FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO
   18 lista_idents: lista_idents . VIRGULA IDENT

    FECHA_PARENTESES  shift, and go to state 9
    VIRGULA           shift, and go to state 10


state 9

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES . PONTO_E_VIRGULA bloco PONTO

    PONTO_E_VIRGULA  shift, and go to state 11


state 10

   18 lista_idents: lista_idents VIRGULA . IDENT

    IDENT  shift, and go to state 12


state 11

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA . bloco PONTO

    T_BEGIN   reduce using rule 9 (var)
    VAR       reduce using rule 7 (@3)
    VAR       [reduce using rule 9 (var)]
    $default  reduce using rule 7 (@3)

    bloco               go to state 13
    parte_declara_vars  go to state 14
    var                 go to state 15
    @3                  go to state 16


state 12

   18 lista_idents: lista_idents VIRGULA IDENT .

    $default  reduce using rule 18 (lista_idents)


state 13

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco . PONTO

    PONTO  shift, and go to state 17


state 14

    4 bloco: parte_declara_vars . @2 comando_composto
    6 parte_declara_vars: parte_declara_vars . var

    T_BEGIN   reduce using rule 3 (@2)
    T_BEGIN   [reduce using rule 9 (var)]
    VAR       reduce using rule 7 (@3)
    VAR       [reduce using rule 9 (var)]
    $default  reduce using rule 3 (@2)

    @2   go to state 18
    var  go to state 19
    @3   go to state 16


state 15

    5 parte_declara_vars: var .

    $default  reduce using rule 5 (parte_declara_vars)


state 16

    8 var: @3 . VAR declara_vars

    VAR  shift, and go to state 20


state 17

    2 programa: @1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO .

    $default  reduce using rule 2 (programa)


state 18

    4 bloco: parte_declara_vars @2 . comando_composto

    T_BEGIN  shift, and go to state 21

    comando_composto  go to state 22


state 19

    6 parte_declara_vars: parte_declara_vars var .

    $default  reduce using rule 6 (parte_declara_vars)


state 20

    8 var: @3 VAR . declara_vars

    $default  reduce using rule 12 (@4)

    declara_vars  go to state 23
    declara_var   go to state 24
    @4            go to state 25


state 21

   20 comando_composto: T_BEGIN . comandos T_END

    IDENT  shift, and go to state 26
    WHILE  shift, and go to state 27
    IF     shift, and go to state 28

    IDENT     [reduce using rule 28 (comando_sem_rotulo)]
    WHILE     [reduce using rule 28 (comando_sem_rotulo)]
    IF        [reduce using rule 28 (comando_sem_rotulo)]
    $default  reduce using rule 28 (comando_sem_rotulo)

    comandos            go to state 29
    comando             go to state 30
    comando_sem_rotulo  go to state 31


state 22

    4 bloco: parte_declara_vars @2 comando_composto .

    $default  reduce using rule 4 (bloco)


state 23

    8 var: @3 VAR declara_vars .
   10 declara_vars: declara_vars . declara_var

    IDENT     reduce using rule 12 (@4)
    $default  reduce using rule 8 (var)

    declara_var  go to state 32
    @4           go to state 25


state 24

   11 declara_vars: declara_var .

    $default  reduce using rule 11 (declara_vars)


state 25

   14 declara_var: @4 . lista_id_var DOIS_PONTOS tipo @5 PONTO_E_VIRGULA

    IDENT  shift, and go to state 33

    lista_id_var  go to state 34


state 26

   24 comando: IDENT . DOIS_PONTOS comando_sem_rotulo
   25 comando_sem_rotulo: IDENT . ATRIBUICAO IDENT PONTO_E_VIRGULA

    DOIS_PONTOS  shift, and go to state 35
    ATRIBUICAO   shift, and go to state 36


state 27

   27 comando_sem_rotulo: WHILE . expressao DO comando_sem_rotulo

    IDENT  shift, and go to state 37

    expressao  go to state 38


state 28

   26 comando_sem_rotulo: IF . expressao THEN comando_sem_rotulo

    IDENT  shift, and go to state 37

    expressao  go to state 39


state 29

   20 comando_composto: T_BEGIN comandos . T_END
   22 comandos: comandos . comando

    T_END  shift, and go to state 40
    IDENT  shift, and go to state 26
    WHILE  shift, and go to state 27
    IF     shift, and go to state 28

    T_END  [reduce using rule 28 (comando_sem_rotulo)]
    IDENT  [reduce using rule 28 (comando_sem_rotulo)]
    WHILE  [reduce using rule 28 (comando_sem_rotulo)]
    IF     [reduce using rule 28 (comando_sem_rotulo)]

    comando             go to state 41
    comando_sem_rotulo  go to state 31


state 30

   21 comandos: comando .

    $default  reduce using rule 21 (comandos)


state 31

   23 comando: comando_sem_rotulo .

    $default  reduce using rule 23 (comando)


state 32

   10 declara_vars: declara_vars declara_var .

    $default  reduce using rule 10 (declara_vars)


state 33

   17 lista_id_var: IDENT .

    $default  reduce using rule 17 (lista_id_var)


state 34

   14 declara_var: @4 lista_id_var . DOIS_PONTOS tipo @5 PONTO_E_VIRGULA
   16 lista_id_var: lista_id_var . VIRGULA IDENT

    VIRGULA      shift, and go to state 42
    DOIS_PONTOS  shift, and go to state 43


state 35

   24 comando: IDENT DOIS_PONTOS . comando_sem_rotulo

    IDENT  shift, and go to state 44
    WHILE  shift, and go to state 27
    IF     shift, and go to state 28

    IDENT     [reduce using rule 28 (comando_sem_rotulo)]
    WHILE     [reduce using rule 28 (comando_sem_rotulo)]
    IF        [reduce using rule 28 (comando_sem_rotulo)]
    $default  reduce using rule 28 (comando_sem_rotulo)

    comando_sem_rotulo  go to state 45


state 36

   25 comando_sem_rotulo: IDENT ATRIBUICAO . IDENT PONTO_E_VIRGULA

    IDENT  shift, and go to state 46


state 37

   29 expressao: IDENT . IGUAL IDENT

    IGUAL  shift, and go to state 47


state 38

   27 comando_sem_rotulo: WHILE expressao . DO comando_sem_rotulo

    DO  shift, and go to state 48


state 39

   26 comando_sem_rotulo: IF expressao . THEN comando_sem_rotulo

    THEN  shift, and go to state 49


state 40

   20 comando_composto: T_BEGIN comandos T_END .

    $default  reduce using rule 20 (comando_composto)


state 41

   22 comandos: comandos comando .

    $default  reduce using rule 22 (comandos)


state 42

   16 lista_id_var: lista_id_var VIRGULA . IDENT

    IDENT  shift, and go to state 50


state 43

   14 declara_var: @4 lista_id_var DOIS_PONTOS . tipo @5 PONTO_E_VIRGULA

    IDENT  shift, and go to state 51

    tipo  go to state 52


state 44

   25 comando_sem_rotulo: IDENT . ATRIBUICAO IDENT PONTO_E_VIRGULA

    ATRIBUICAO  shift, and go to state 36


state 45

   24 comando: IDENT DOIS_PONTOS comando_sem_rotulo .

    $default  reduce using rule 24 (comando)


state 46

   25 comando_sem_rotulo: IDENT ATRIBUICAO IDENT . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 53


state 47

   29 expressao: IDENT IGUAL . IDENT

    IDENT  shift, and go to state 54


state 48

   27 comando_sem_rotulo: WHILE expressao DO . comando_sem_rotulo

    IDENT  shift, and go to state 44
    WHILE  shift, and go to state 27
    IF     shift, and go to state 28

    IDENT     [reduce using rule 28 (comando_sem_rotulo)]
    WHILE     [reduce using rule 28 (comando_sem_rotulo)]
    IF        [reduce using rule 28 (comando_sem_rotulo)]
    $default  reduce using rule 28 (comando_sem_rotulo)

    comando_sem_rotulo  go to state 55


state 49

   26 comando_sem_rotulo: IF expressao THEN . comando_sem_rotulo

    IDENT  shift, and go to state 44
    WHILE  shift, and go to state 27
    IF     shift, and go to state 28

    IDENT     [reduce using rule 28 (comando_sem_rotulo)]
    WHILE     [reduce using rule 28 (comando_sem_rotulo)]
    IF        [reduce using rule 28 (comando_sem_rotulo)]
    $default  reduce using rule 28 (comando_sem_rotulo)

    comando_sem_rotulo  go to state 56


state 50

   16 lista_id_var: lista_id_var VIRGULA IDENT .

    $default  reduce using rule 16 (lista_id_var)


state 51

   15 tipo: IDENT .

    $default  reduce using rule 15 (tipo)


state 52

   14 declara_var: @4 lista_id_var DOIS_PONTOS tipo . @5 PONTO_E_VIRGULA

    $default  reduce using rule 13 (@5)

    @5  go to state 57


state 53

   25 comando_sem_rotulo: IDENT ATRIBUICAO IDENT PONTO_E_VIRGULA .

    $default  reduce using rule 25 (comando_sem_rotulo)


state 54

   29 expressao: IDENT IGUAL IDENT .

    $default  reduce using rule 29 (expressao)


state 55

   27 comando_sem_rotulo: WHILE expressao DO comando_sem_rotulo .

    $default  reduce using rule 27 (comando_sem_rotulo)


state 56

   26 comando_sem_rotulo: IF expressao THEN comando_sem_rotulo .

    $default  reduce using rule 26 (comando_sem_rotulo)


state 57

   14 declara_var: @4 lista_id_var DOIS_PONTOS tipo @5 . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 58


state 58

   14 declara_var: @4 lista_id_var DOIS_PONTOS tipo @5 PONTO_E_VIRGULA .

    $default  reduce using rule 14 (declara_var)
